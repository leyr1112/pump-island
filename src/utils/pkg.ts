const MAX_SYMBOL_LENGTH = 8;
const MAX_DECIMAL_PLACES = 12;
const MAX_NAME_LENGTH = 32;
const MAX_DESCRIPTION_LENGTH = 320;
const MAX_ICON_LENGTH = 320;

export type Currency = {
    symbol: string; // 2-8 chars
    name: string; // 0-32 chars
    description: string; // 0-320 chars
    iconUrl: string; // 0-320 chars
};

export function intoBase64(f: Currency) {
    let { name, symbol, description, iconUrl } = f;

    const symLen = symbol.length;
    if (symLen < 2 || symLen > MAX_SYMBOL_LENGTH) {
        throw new Error(
            `Symbol must be between 2 and ${MAX_SYMBOL_LENGTH} characters`
        );
    }

    if (!isAscii(symbol)) {
        throw new Error("Symbol must be ASCII only");
    }
    if (name.length > MAX_NAME_LENGTH) {
        throw new Error(`Name length can be at most ${MAX_NAME_LENGTH} characters`);
    }
    if (!isAscii(name)) {
        throw new Error("Name must be ASCII only");
    }
    if (description.length > MAX_DESCRIPTION_LENGTH) {
        throw new Error(
            `Description length can be at most ${MAX_DESCRIPTION_LENGTH} characters`
        );
    }
    if (!isAscii(description)) {
        throw new Error("Description must be ASCII only");
    }
    if (!isAscii(iconUrl)) {
        throw new Error("Icon URL must be ASCII only");
    }
    if (!isAscii(iconUrl)) {
        throw new Error("Icon URL must be ASCII only");
    }
    const pkgBytes = Buffer.from(PGKS[symLen - 2], "base64");

    const replacables = {
        RDECIM: {
            i: findIndex(pkgBytes, "RDECIM"),
            v: "1".repeat(6).padEnd(MAX_DECIMAL_PLACES, " "),
        },
        RSYMBL: {
            i: findIndex(pkgBytes, "RSYMBL"),
            v: symbol.padEnd(MAX_SYMBOL_LENGTH, " "),
        },
        RNAMEE: {
            i: findIndex(pkgBytes, "RNAMEE"),
            v: name.padEnd(MAX_NAME_LENGTH, " "),
        },
        RDESCR: {
            i: findIndex(pkgBytes, "RDESCR"),
            v: description.padEnd(MAX_DESCRIPTION_LENGTH, " "),
        },
        RICONN: {
            i: findIndex(pkgBytes, "RICONU"),
            v: iconUrl.padEnd(MAX_ICON_LENGTH, " "),
        },
        witness: {
            i: findIndex(pkgBytes, "A".repeat(symLen)),
            v: symbol.toUpperCase(),
        },
        module: {
            i: findIndex(pkgBytes, "a".repeat(symLen)),
            v: symbol.toLowerCase(),
        },
    };


    for (const [n, { i, v }] of Object.entries(replacables)) {
        if (i === -1) {
            console.error("Index is -1", n, v.length, v);
            throw new Error("Invalid blueprint, please contact devs");
        }

        pkgBytes.set(Buffer.from(v), i);
    }

    return pkgBytes.toString("base64");
}

function isAscii(s: string) {
    return /^[\x00-\x7F]*$/.test(s);
}

function findIndex(inputArray: Buffer, search: string): number {
    const searchArray = Buffer.from(search, "utf8");

    if (searchArray.length === 0) {
        throw new Error("Search string cannot be empty.");
    }

    let foundAtIndex = -1;
    for (
        let readIndex = 0;
        readIndex < inputArray.length - searchArray.length - 1;
        readIndex++
    ) {
        let s = inputArray.subarray(readIndex, readIndex + searchArray.length);
        if (!s.equals(searchArray)) {
            continue;
        }

        foundAtIndex = readIndex;
        break;
    }

    return foundAtIndex;
}

const PGKS = [
    // 2 chars ("aa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0AfwBCPADYAbQBMwFCpwKBQyhCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAgJBQQxDb2luTWV0YWRhdGEGT3B0aW9uBlN0cmluZwtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsAmFhBWFzY2lpBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQKaW50b19ieXRlcxVuZXdfdW5zYWZlX2Zyb21fYnl0ZXMEbm9uZQZvcHRpb24TcHVibGljX3NoYXJlX29iamVjdA9wdWJsaWNfdHJhbnNmZXIGc2VuZGVyBHNvbWUGc3RyaW5nCHRvX2FzY2lpCHRyYW5zZmVyCnRyaW1fcmlnaHQKdHhfY29udGV4dAN1cmwEdXRmOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoCDQxSREVDSU0gICAgICAKAgkIUlNZTUJMICAKAiEgUk5BTUVFICAgICAgICAgICAgICAgICAgICAgICAgICAKAsICwAJSREVTQ1IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoCwgLAAlJJQ09OVSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAIBCwEAAAAAAzQHABEBDAIOAkEEDAQHAREBEQYRBRECDAoHAhEBDAkHAxEBDAUHBBEBDAYOBkEEBgAAAAAAAAAAIQQdOAAMAwUhCwYRCzgBDAMLAwwHCwALBDMLCgsJCwULBwoBOAIMCAsBLhEKOAMLCDgEAgEAAAASHDEgDAEOAQwCDgBBBAYAAAAAAAAAACQEGgUKDgAOAEEEBgEAAAAAAAAAF0IECgIiBBYLAgEFGg0ARQQBBQQLAAIA",
    // 3 chars ("aaa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0Af4BCPIDYAbSBMwFCp4KBQyjCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAgNBQUEMQ29pbk1ldGFkYXRhBk9wdGlvbgZTdHJpbmcLVHJlYXN1cnlDYXAJVHhDb250ZXh0A1VybANhYWEFYXNjaWkEY29pbg9jcmVhdGVfY3VycmVuY3kLZHVtbXlfZmllbGQEaW5pdAppbnRvX2J5dGVzFW5ld191bnNhZmVfZnJvbV9ieXRlcwRub25lBm9wdGlvbhNwdWJsaWNfc2hhcmVfb2JqZWN0D3B1YmxpY190cmFuc2ZlcgZzZW5kZXIEc29tZQZzdHJpbmcIdG9fYXNjaWkIdHJhbnNmZXIKdHJpbV9yaWdodAp0eF9jb250ZXh0A3VybAR1dGY4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCgINDFJERUNJTSAgICAgIAoCCQhSU1lNQkwgIAoCISBSTkFNRUUgICAgICAgICAgICAgICAgICAgICAgICAgIAoCwgLAAlJERVNDUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgLCAsACUklDT05VICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAgELAQAAAAADNAcAEQEMAg4CQQQMBAcBEQERBhEFEQIMCgcCEQEMCQcDEQEMBQcEEQEMBg4GQQQGAAAAAAAAAAAhBB04AAwDBSELBhELOAEMAwsDDAcLAAsEMwsKCwkLBQsHCgE4AgwICwEuEQo4AwsIOAQCAQAAABIcMSAMAQ4BDAIOAEEEBgAAAAAAAAAAJAQaBQoOAA4AQQQGAQAAAAAAAAAXQgQKAiIEFgsCAQUaDQBFBAEFBAsAAgA=",
    // 4 chars ("aaaa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0AYACCPQDYAbUBMwFCqAKBQylCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAgRBQUFBDENvaW5NZXRhZGF0YQZPcHRpb24GU3RyaW5nC1RyZWFzdXJ5Q2FwCVR4Q29udGV4dANVcmwEYWFhYQVhc2NpaQRjb2luD2NyZWF0ZV9jdXJyZW5jeQtkdW1teV9maWVsZARpbml0CmludG9fYnl0ZXMVbmV3X3Vuc2FmZV9mcm9tX2J5dGVzBG5vbmUGb3B0aW9uE3B1YmxpY19zaGFyZV9vYmplY3QPcHVibGljX3RyYW5zZmVyBnNlbmRlcgRzb21lBnN0cmluZwh0b19hc2NpaQh0cmFuc2Zlcgp0cmltX3JpZ2h0CnR4X2NvbnRleHQDdXJsBHV0ZjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKAg0MUkRFQ0lNICAgICAgCgIJCFJTWU1CTCAgCgIhIFJOQU1FRSAgICAgICAgICAgICAgICAgICAgICAgICAgCgLCAsACUkRFU0NSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKAsICwAJSSUNPTlUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAACAQsBAAAAAAM0BwARAQwCDgJBBAwEBwERAREGEQURAgwKBwIRAQwJBwMRAQwFBwQRAQwGDgZBBAYAAAAAAAAAACEEHTgADAMFIQsGEQs4AQwDCwMMBwsACwQzCwoLCQsFCwcKATgCDAgLAS4RCjgDCwg4BAIBAAAAEhwxIAwBDgEMAg4AQQQGAAAAAAAAAAAkBBoFCg4ADgBBBAYBAAAAAAAAABdCBAoCIgQWCwIBBRoNAEUEAQUECwACAA==",
    // 5 chars ("aaaaa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0AYICCPYDYAbWBMwFCqIKBQynCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAgVBQUFBQQxDb2luTWV0YWRhdGEGT3B0aW9uBlN0cmluZwtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsBWFhYWFhBWFzY2lpBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQKaW50b19ieXRlcxVuZXdfdW5zYWZlX2Zyb21fYnl0ZXMEbm9uZQZvcHRpb24TcHVibGljX3NoYXJlX29iamVjdA9wdWJsaWNfdHJhbnNmZXIGc2VuZGVyBHNvbWUGc3RyaW5nCHRvX2FzY2lpCHRyYW5zZmVyCnRyaW1fcmlnaHQKdHhfY29udGV4dAN1cmwEdXRmOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoCDQxSREVDSU0gICAgICAKAgkIUlNZTUJMICAKAiEgUk5BTUVFICAgICAgICAgICAgICAgICAgICAgICAgICAKAsICwAJSREVTQ1IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoCwgLAAlJJQ09OVSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAIBCwEAAAAAAzQHABEBDAIOAkEEDAQHAREBEQYRBRECDAoHAhEBDAkHAxEBDAUHBBEBDAYOBkEEBgAAAAAAAAAAIQQdOAAMAwUhCwYRCzgBDAMLAwwHCwALBDMLCgsJCwULBwoBOAIMCAsBLhEKOAMLCDgEAgEAAAASHDEgDAEOAQwCDgBBBAYAAAAAAAAAACQEGgUKDgAOAEEEBgEAAAAAAAAAF0IECgIiBBYLAgEFGg0ARQQBBQQLAAIA",
    // 6 chars ("aaaaaa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0AYQCCPgDYAbYBMwFCqQKBQypCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAgZBQUFBQUEMQ29pbk1ldGFkYXRhBk9wdGlvbgZTdHJpbmcLVHJlYXN1cnlDYXAJVHhDb250ZXh0A1VybAZhYWFhYWEFYXNjaWkEY29pbg9jcmVhdGVfY3VycmVuY3kLZHVtbXlfZmllbGQEaW5pdAppbnRvX2J5dGVzFW5ld191bnNhZmVfZnJvbV9ieXRlcwRub25lBm9wdGlvbhNwdWJsaWNfc2hhcmVfb2JqZWN0D3B1YmxpY190cmFuc2ZlcgZzZW5kZXIEc29tZQZzdHJpbmcIdG9fYXNjaWkIdHJhbnNmZXIKdHJpbV9yaWdodAp0eF9jb250ZXh0A3VybAR1dGY4AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACCgINDFJERUNJTSAgICAgIAoCCQhSU1lNQkwgIAoCISBSTkFNRUUgICAgICAgICAgICAgICAgICAgICAgICAgIAoCwgLAAlJERVNDUiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCgLCAsACUklDT05VICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAAAgELAQAAAAADNAcAEQEMAg4CQQQMBAcBEQERBhEFEQIMCgcCEQEMCQcDEQEMBQcEEQEMBg4GQQQGAAAAAAAAAAAhBB04AAwDBSELBhELOAEMAwsDDAcLAAsEMwsKCwkLBQsHCgE4AgwICwEuEQo4AwsIOAQCAQAAABIcMSAMAQ4BDAIOAEEEBgAAAAAAAAAAJAQaBQoOAA4AQQQGAQAAAAAAAAAXQgQKAiIEFgsCAQUaDQBFBAEFBAsAAgA=",
    // 7 chars ("aaaaaaa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0AYYCCPoDYAbaBMwFCqYKBQyrCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAgdBQUFBQUFBDENvaW5NZXRhZGF0YQZPcHRpb24GU3RyaW5nC1RyZWFzdXJ5Q2FwCVR4Q29udGV4dANVcmwHYWFhYWFhYQVhc2NpaQRjb2luD2NyZWF0ZV9jdXJyZW5jeQtkdW1teV9maWVsZARpbml0CmludG9fYnl0ZXMVbmV3X3Vuc2FmZV9mcm9tX2J5dGVzBG5vbmUGb3B0aW9uE3B1YmxpY19zaGFyZV9vYmplY3QPcHVibGljX3RyYW5zZmVyBnNlbmRlcgRzb21lBnN0cmluZwh0b19hc2NpaQh0cmFuc2Zlcgp0cmltX3JpZ2h0CnR4X2NvbnRleHQDdXJsBHV0ZjgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIKAg0MUkRFQ0lNICAgICAgCgIJCFJTWU1CTCAgCgIhIFJOQU1FRSAgICAgICAgICAgICAgICAgICAgICAgICAgCgLCAsACUkRFU0NSICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKAsICwAJSSUNPTlUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAACAQsBAAAAAAM0BwARAQwCDgJBBAwEBwERAREGEQURAgwKBwIRAQwJBwMRAQwFBwQRAQwGDgZBBAYAAAAAAAAAACEEHTgADAMFIQsGEQs4AQwDCwMMBwsACwQzCwoLCQsFCwcKATgCDAgLAS4RCjgDCwg4BAIBAAAAEhwxIAwBDgEMAg4AQQQGAAAAAAAAAAAkBBoFCg4ADgBBBAYBAAAAAAAAABdCBAoCIgQWCwIBBRoNAEUEAQUECwACAA==",
    // 8 chars ("aaaaaaaa") module+witness
    "oRzrCwYAAAAKAQAQAhAmAzZBBHcKBYEBcwf0AYgCCPwDYAbcBMwFCqgKBQytCrcBAAcBCAEQARUCCQIXAhkCGgAAAgABAwcAAgIHAQAAAwMHAAQBDAEAAQQEDAEAAQYFAgAHBgcAAAwAAQAAGAICAAENBgIAAg8BCAEAAhQJCAEAAxYFBgADGwIFAAQKCwwBAgURCQEBDAUSEAEBDAYTDQ4ABw4CBwADBwQHBwoJDwgRAggABwgGAAEKAgkKAgsCAQgHAwoCCgILAgEIBwsEAQgACgIKAgECAQgDAQgBAQgHAQsCAQkAAQkAAQgABwkAAgoCCgIKAgsCAQgHBwgGAgsFAQkACwQBCQABBggGAQUBCwUBCAACCQAFAQsEAQgAAgIGAghBQUFBQUFBQQxDb2luTWV0YWRhdGEGT3B0aW9uBlN0cmluZwtUcmVhc3VyeUNhcAlUeENvbnRleHQDVXJsCGFhYWFhYWFhBWFzY2lpBGNvaW4PY3JlYXRlX2N1cnJlbmN5C2R1bW15X2ZpZWxkBGluaXQKaW50b19ieXRlcxVuZXdfdW5zYWZlX2Zyb21fYnl0ZXMEbm9uZQZvcHRpb24TcHVibGljX3NoYXJlX29iamVjdA9wdWJsaWNfdHJhbnNmZXIGc2VuZGVyBHNvbWUGc3RyaW5nCHRvX2FzY2lpCHRyYW5zZmVyCnRyaW1fcmlnaHQKdHhfY29udGV4dAN1cmwEdXRmOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgoCDQxSREVDSU0gICAgICAKAgkIUlNZTUJMICAKAiEgUk5BTUVFICAgICAgICAgICAgICAgICAgICAgICAgICAKAsICwAJSREVTQ1IgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAoCwgLAAlJJQ09OVSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgAAIBCwEAAAAAAzQHABEBDAIOAkEEDAQHAREBEQYRBRECDAoHAhEBDAkHAxEBDAUHBBEBDAYOBkEEBgAAAAAAAAAAIQQdOAAMAwUhCwYRCzgBDAMLAwwHCwALBDMLCgsJCwULBwoBOAIMCAsBLhEKOAMLCDgEAgEAAAASHDEgDAEOAQwCDgBBBAYAAAAAAAAAACQEGgUKDgAOAEEEBgEAAAAAAAAAF0IECgIiBBYLAgEFGg0ARQQBBQQLAAIA",
];